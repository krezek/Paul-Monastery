//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64
//   float4x4 gTexTransform;            // Offset:   64 Size:    64
//
// }
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64 [unused]
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float4x4 gFixedView;               // Offset:  384 Size:    64
//   float3 gEyePosW;                   // Offset:  448 Size:    12 [unused]
//   float cbPerObjectPad1;             // Offset:  460 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  464 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  472 Size:     8 [unused]
//   float gNearZ;                      // Offset:  480 Size:     4 [unused]
//   float gFarZ;                       // Offset:  484 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  488 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  492 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  496 Size:    16 [unused]
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  512
//       float FalloffStart;            // Offset:  524
//       float3 Direction;              // Offset:  528
//       float FalloffEnd;              // Offset:  540
//       float3 Position;               // Offset:  544
//       float SpotPower;               // Offset:  556
//
//   } gLights[16];                     // Offset:  512 Size:   768 [unused]
//
// }
//
// cbuffer cbMaterial
// {
//
//   float4 gDiffuseAlbedo;             // Offset:    0 Size:    16 [unused]
//   float3 gFresnelR0;                 // Offset:   16 Size:    12 [unused]
//   float gRoughness;                  // Offset:   28 Size:     4 [unused]
//   float4x4 gMatTransform;            // Offset:   32 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// cbPerObject                       cbuffer      NA          NA     CB0            cb0      1 
// cbPass                            cbuffer      NA          NA     CB1            cb1      1 
// cbMaterial                        cbuffer      NA          NA     CB2            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
vs_5_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[0:0][8], immediateIndexed, space=0
dcl_constantbuffer CB1[1:1][28], immediateIndexed, space=0
dcl_constantbuffer CB2[2:2][4], immediateIndexed, space=0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xy
dcl_temps 5
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, CB0[0][0].xyzw
dp4 r1.y, r0.xyzw, CB0[0][1].xyzw
dp4 r1.z, r0.xyzw, CB0[0][2].xyzw
dp4 r1.w, r0.xyzw, CB0[0][3].xyzw
dp3 o2.x, v1.xyzx, CB0[0][0].xyzx
dp3 o2.y, v1.xyzx, CB0[0][1].xyzx
dp3 o2.z, v1.xyzx, CB0[0][2].xyzx
mul r0.xyzw, CB1[1][8].yyyy, CB1[1][25].xyzw
mad r0.xyzw, CB1[1][24].xyzw, CB1[1][8].xxxx, r0.xyzw
mad r0.xyzw, CB1[1][26].xyzw, CB1[1][8].zzzz, r0.xyzw
mad r0.xyzw, CB1[1][27].xyzw, CB1[1][8].wwww, r0.xyzw
mul r2.xyzw, CB1[1][9].yyyy, CB1[1][25].xyzw
mad r2.xyzw, CB1[1][24].xyzw, CB1[1][9].xxxx, r2.xyzw
mad r2.xyzw, CB1[1][26].xyzw, CB1[1][9].zzzz, r2.xyzw
mad r2.xyzw, CB1[1][27].xyzw, CB1[1][9].wwww, r2.xyzw
mul r3.xyzw, CB1[1][10].yyyy, CB1[1][25].xyzw
mad r3.xyzw, CB1[1][24].xyzw, CB1[1][10].xxxx, r3.xyzw
mad r3.xyzw, CB1[1][26].xyzw, CB1[1][10].zzzz, r3.xyzw
mad r3.xyzw, CB1[1][27].xyzw, CB1[1][10].wwww, r3.xyzw
mul r4.xyzw, CB1[1][11].yyyy, CB1[1][25].xyzw
mad r4.xyzw, CB1[1][24].xyzw, CB1[1][11].xxxx, r4.xyzw
mad r4.xyzw, CB1[1][26].xyzw, CB1[1][11].zzzz, r4.xyzw
mad r4.xyzw, CB1[1][27].xyzw, CB1[1][11].wwww, r4.xyzw
dp4 o0.x, r1.xyzw, r0.xyzw
dp4 o0.y, r1.xyzw, r2.xyzw
dp4 o0.z, r1.xyzw, r3.xyzw
dp4 o0.w, r1.xyzw, r4.xyzw
mov r0.xy, v2.xyxx
mov r0.z, l(1.000000)
dp3 r2.x, r0.xyzx, CB0[0][4].xywx
dp3 r2.y, r0.xyzx, CB0[0][5].xywx
dp3 r2.z, r0.xyzx, CB0[0][6].xywx
dp3 r2.w, r0.xyzx, CB0[0][7].xywx
dp4 o3.x, r2.xyzw, CB2[2][2].xyzw
dp4 o3.y, r2.xyzw, CB2[2][3].xyzw
mov o1.xyz, r1.xyzx
ret 
// Approximately 39 instruction slots used
